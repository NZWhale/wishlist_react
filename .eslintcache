[{"/Users/vladimirputin/Desktop/projects/wishlist/src/index.tsx":"1","/Users/vladimirputin/Desktop/projects/wishlist/src/App.tsx":"2","/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/index.tsx":"3","/Users/vladimirputin/Desktop/projects/wishlist/src/components/FriendsList/index.tsx":"4","/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AddFriendsBlock.tsx":"5","/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AccountSettingsBlock.tsx":"6","/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AddWishesBlock.tsx":"7","/Users/vladimirputin/Desktop/projects/wishlist/src/components/WishesBlock/index.tsx":"8","/Users/vladimirputin/Desktop/projects/wishlist/src/components/WishesBlock/SingleWish.tsx":"9","/Users/vladimirputin/Desktop/projects/wishlist/src/components/FriendsList/OneFriendWishes.tsx":"10","/Users/vladimirputin/Desktop/projects/wishlist/src/components/LoginPage/index.tsx":"11","/Users/vladimirputin/Desktop/projects/wishlist/src/components/Header.tsx":"12","/Users/vladimirputin/Desktop/projects/wishlist/src/store/store.ts":"13","/Users/vladimirputin/Desktop/projects/wishlist/src/store/reducers/reducer.ts":"14","/Users/vladimirputin/Desktop/projects/wishlist/src/store/initialState.ts":"15","/Users/vladimirputin/Desktop/projects/wishlist/src/store/actionCreators/setLoggedInUser.ts":"16","/Users/vladimirputin/Desktop/projects/wishlist/src/store/actionCreators/setLoggedStatus.ts":"17","/Users/vladimirputin/Desktop/projects/wishlist/src/store/actionCreators/setUsersAction.ts":"18","/Users/vladimirputin/Desktop/projects/wishlist/src/utils.ts":"19"},{"size":493,"mtime":1611064659428,"results":"20","hashOfConfig":"21"},{"size":2155,"mtime":1611212573614,"results":"22","hashOfConfig":"21"},{"size":1414,"mtime":1611055363053,"results":"23","hashOfConfig":"21"},{"size":828,"mtime":1611161027809,"results":"24","hashOfConfig":"21"},{"size":192,"mtime":1610537767316,"results":"25","hashOfConfig":"21"},{"size":1612,"mtime":1611160278420,"results":"26","hashOfConfig":"21"},{"size":5196,"mtime":1611224509678,"results":"27","hashOfConfig":"21"},{"size":659,"mtime":1611223247824,"results":"28","hashOfConfig":"21"},{"size":3129,"mtime":1611227869045,"results":"29","hashOfConfig":"21"},{"size":1350,"mtime":1611223262871,"results":"30","hashOfConfig":"21"},{"size":2159,"mtime":1611069913243,"results":"31","hashOfConfig":"21"},{"size":3074,"mtime":1611068776532,"results":"32","hashOfConfig":"21"},{"size":137,"mtime":1610800280849,"results":"33","hashOfConfig":"21"},{"size":557,"mtime":1611068659482,"results":"34","hashOfConfig":"21"},{"size":184,"mtime":1611206378331,"results":"35","hashOfConfig":"21"},{"size":281,"mtime":1610801020666,"results":"36","hashOfConfig":"21"},{"size":287,"mtime":1611068770336,"results":"37","hashOfConfig":"21"},{"size":251,"mtime":1610800949309,"results":"38","hashOfConfig":"21"},{"size":189,"mtime":1611225704878,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"18cpbcg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vladimirputin/Desktop/projects/wishlist/src/index.tsx",[],["83","84"],"/Users/vladimirputin/Desktop/projects/wishlist/src/App.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/index.tsx",["85"],"import * as React from 'react';\nimport { Accordion, Icon, Segment } from 'semantic-ui-react';\nimport Header from '../Header';\nimport AccountSettingsBlock from './AccountSettingsBlock';\nimport AddFriendsBlock from './AddFriendsBlock';\nimport AddWishesBlock from './AddWishesBlock';\n\nclass AccountPage extends React.Component {\n    state = { activeIndex: 0 }\n\n    handleClick = (e: any, titleProps: any) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    render() {\n        const { activeIndex } = this.state\n\n        return (\n            <>\n                <Header activeItem={\"Account\"}/>\n                <AddFriendsBlock />\n\n                <AccountSettingsBlock />\n                <Accordion fluid styled>\n                    <Accordion.Title\n                        active={activeIndex === 2}\n                        index={2}\n                        onClick={this.handleClick}\n                    >\n                        <Icon name='dropdown' />\n                    My Wishes\n                </Accordion.Title>\n                    <Accordion.Content active={activeIndex === 2}>\n                        <AddWishesBlock />\n                    </Accordion.Content>\n                </Accordion>\n\n            </>\n        )\n    }\n}\n\nexport default AccountPage","/Users/vladimirputin/Desktop/projects/wishlist/src/components/FriendsList/index.tsx",["86"],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AddFriendsBlock.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AccountSettingsBlock.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AddWishesBlock.tsx",["87"],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/WishesBlock/index.tsx",["88","89"],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/WishesBlock/SingleWish.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/FriendsList/OneFriendWishes.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/LoginPage/index.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/Header.tsx",["90","91"],"import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Button, Input, Menu } from 'semantic-ui-react';\nimport setLoggedInUser from '../store/actionCreators/setLoggedInUser';\nimport setLoggedInStatus from '../store/actionCreators/setLoggedStatus';\nimport store from '../store/store';\nimport { StateInterface } from '../types';\n\ninterface HeaderProps extends HeaderPropsFromState{\n    activeItem: string;\n}\n\ninterface HeaderPropsFromState{\n    loggedInUser: string;\n}\n\n\nclass Header extends React.Component<HeaderProps & RouteComponentProps> {\n    state = { \n        activeItem: this.props.activeItem,\n    }\n\n    handleItemClick = (e: any, { name }: any) => this.setState({ activeItem: name })\n\n    render() {\n        const { activeItem } = this.state\n        const { match, history } = this.props\n                return (\n            <Menu pointing>\n                        <Menu.Item\n                            name='Friends'\n                            active={activeItem === 'Friends'}\n                            onClick={this.handleItemClick}\n                            as={Link}\n                            to=\"/friendslist\"\n                        />\n                        <Menu.Item\n                            name='Account'\n                            active={activeItem === 'Account'}\n                            onClick={this.handleItemClick}\n                            as={Link}\n                            to=\"/account\"\n                        />\n                        {activeItem === 'Friends' &&\n                            <Menu.Menu position='right'>\n                                <Menu.Item>\n                                    <Input icon='users' iconPosition='left' placeholder='Search users...' />\n                                    {/* TODO: create function to filter by friend's name */}\n                                </Menu.Item>\n                            </Menu.Menu>\n                        }\n                        {activeItem === 'Account' &&\n                            <Menu.Menu position='right'>\n                                <Menu.Item>\n                                    <Button basic \n                                    color='black'\n                                    onClick={() => {\n                                        console.log(this.props.loggedInUser)\n                                        store.dispatch(setLoggedInStatus(false))\n                                        history.push('/login')\n                                    }}\n                                    >Exit</Button>\n                                    {/* TODO: create function to exit from account */}\n                                </Menu.Item>\n                            </Menu.Menu>\n                        }\n                    </Menu>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: StateInterface): HeaderPropsFromState => ({\n    loggedInUser: state.loggedInUser\n})\n\nexport default connect(mapStateToProps)(withRouter(Header))","/Users/vladimirputin/Desktop/projects/wishlist/src/store/store.ts",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/store/reducers/reducer.ts",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/store/initialState.ts",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/store/actionCreators/setLoggedInUser.ts",[],["92","93"],"/Users/vladimirputin/Desktop/projects/wishlist/src/store/actionCreators/setLoggedStatus.ts",["94"],"import Action, { User } from \"../../types\"\n\n\nconst setLoggedStatusAction: string = \"SET_LOGGED_STATUS\"\n\nconst setLoggedInStatus = (value: boolean | null): Action<any> => {\n    return { \n        type: setLoggedStatusAction,\n        payload: value\n    }\n}\n\nexport default setLoggedInStatus","/Users/vladimirputin/Desktop/projects/wishlist/src/store/actionCreators/setUsersAction.ts",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/utils.ts",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"103","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":4,"column":24,"nodeType":"101","messageId":"102","endLine":4,"endColumn":30},{"ruleId":"99","severity":1,"message":"104","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"105","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":23},{"ruleId":"99","severity":1,"message":"106","line":28,"column":17,"nodeType":"101","messageId":"102","endLine":28,"endColumn":22},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","replacedBy":"108"},{"ruleId":"99","severity":1,"message":"109","line":1,"column":18,"nodeType":"101","messageId":"102","endLine":1,"endColumn":22},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","'Item' is defined but never used.","'setLoggedInUser' is defined but never used.","'match' is assigned a value but never used.",["110"],["111"],"'User' is defined but never used.","no-global-assign","no-unsafe-negation"]