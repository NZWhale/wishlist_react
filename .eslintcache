[{"/Users/vladimirputin/Desktop/projects/wishlist/src/index.tsx":"1","/Users/vladimirputin/Desktop/projects/wishlist/src/App.tsx":"2","/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/index.tsx":"3","/Users/vladimirputin/Desktop/projects/wishlist/src/components/FriendsList/index.tsx":"4","/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AddFriendsBlock.tsx":"5","/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AccountSettingsBlock.tsx":"6","/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AddWishesBlock.tsx":"7","/Users/vladimirputin/Desktop/projects/wishlist/src/components/WishesBlock/index.tsx":"8","/Users/vladimirputin/Desktop/projects/wishlist/src/components/WishesBlock/SingleWish.tsx":"9","/Users/vladimirputin/Desktop/projects/wishlist/src/components/FriendsList/OneFriendWishes.tsx":"10","/Users/vladimirputin/Desktop/projects/wishlist/src/components/LoginPage/index.tsx":"11","/Users/vladimirputin/Desktop/projects/wishlist/src/Routes.tsx":"12","/Users/vladimirputin/Desktop/projects/wishlist/src/components/Header.tsx":"13"},{"size":350,"mtime":1610962974885,"results":"14","hashOfConfig":"15"},{"size":1300,"mtime":1610965318816,"results":"16","hashOfConfig":"15"},{"size":1414,"mtime":1610964270845,"results":"17","hashOfConfig":"15"},{"size":1082,"mtime":1610965035092,"results":"18","hashOfConfig":"15"},{"size":192,"mtime":1610537767316,"results":"19","hashOfConfig":"15"},{"size":1612,"mtime":1610637045246,"results":"20","hashOfConfig":"15"},{"size":3569,"mtime":1610634543915,"results":"21","hashOfConfig":"15"},{"size":554,"mtime":1610963984933,"results":"22","hashOfConfig":"15"},{"size":1273,"mtime":1610611415920,"results":"23","hashOfConfig":"15"},{"size":1328,"mtime":1610558801492,"results":"24","hashOfConfig":"15"},{"size":1335,"mtime":1610960540452,"results":"25","hashOfConfig":"15"},{"size":728,"mtime":1610962936251,"results":"26","hashOfConfig":"15"},{"size":2068,"mtime":1610964310361,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18cpbcg",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vladimirputin/Desktop/projects/wishlist/src/index.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/App.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/index.tsx",["56"],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/FriendsList/index.tsx",["57"],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AddFriendsBlock.tsx",[],["58","59"],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AccountSettingsBlock.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/AccountPage/AddWishesBlock.tsx",["60"],"import * as React from 'react';\nimport { Button, Form, Header, Image, Input, Modal, Segment, TextArea } from 'semantic-ui-react';\nimport { InputFile } from 'semantic-ui-react-input-file'\nimport noImage from '../../images/noImage.jpg';\nimport WishesBlock from '../WishesBlock';\n\n\nclass AddWishesBlock extends React.Component {\n    handleUpload = console.log(\"1\")\n    users = [{\"image\": \"undefined\", \"username\": \"littlewhale\", \"dayOfBirth\": \"28.09.1994\", \"wishes\": [{\"title\": \"freedom\", \"comment\": \"i want to be free\"}, {\"title\": \"car\", \"url\": \"https://subaru.com\", \"comment\": \"subaru wrx sti\"}, {\"title\": \"large wish\", \"url\": \"https://none.com\", \"comment\": \"need to implement line break for large comments\"}]}, {\"image\": \"undefined\", \"username\": \"test\", \"dayOfBirth\": \"01.01.1970\", \"wishes\": [{\"title\": \"test\", \"url\": \"https://test.com\", \"comment\": \"test comment\"}, {\"title\": \"test2\", \"url\": \"https://test2.com\", \"comment\": \"second test comment\"}]}]\n    render() {\n        return (\n            <>\n                <ModalExampleModal />\n                <Segment >\n                    <WishesBlock wishes={this.users[0].wishes}/>\n                </Segment>\n            </>\n        )\n    }\n}\n\nfunction ModalExampleModal() {\n    const [open, setOpen] = React.useState(false)\n    const handleUpload = console.log(\"1\")\n    return (\n        <Modal\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n            open={open}\n            trigger={<Button>Add New Wish</Button>}\n        >\n            <Modal.Header>Create Wish</Modal.Header>\n            <Modal.Content image>\n                <Segment>\n                    <div style={{ marginLeft: '15%' }}>\n                        <Image size='medium' style={{ paddingRight: '10px', paddingBottom: '10px' }} src={noImage} wrapped />\n                        <InputFile\n\n                            button={undefined}\n                            input={{\n                                id: 'input-control-id',\n                                onChange: () => handleUpload\n                            }}\n                        />\n                    </div>\n                </Segment>\n                <Modal.Description style={{paddingLeft: '10px'}}> \n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Field\n                                control={Input}\n                                label='Title'\n                                placeholder='Title'\n                            />\n                            <Form.Field\n                                control={Input}\n                                label='Url'\n                                placeholder='Optional'\n                            />\n                        </Form.Group>\n\n                        <Form.Field\n                            control={TextArea}\n                            label='Description'\n                            placeholder='Enter comment... Optional'\n                        />\n                    </Form>\n                </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='black' onClick={() => setOpen(false)}>\n                    Cancel\n                </Button>\n                <Button\n                    content=\"Add Wish\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    onClick={() => setOpen(false)}\n                    positive\n                />\n            </Modal.Actions>\n        </Modal>\n    )\n}\n\nexport default AddWishesBlock","/Users/vladimirputin/Desktop/projects/wishlist/src/components/WishesBlock/index.tsx",["61","62"],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/WishesBlock/SingleWish.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/FriendsList/OneFriendWishes.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/LoginPage/index.tsx",[],"/Users/vladimirputin/Desktop/projects/wishlist/src/Routes.tsx",["63"],"/Users/vladimirputin/Desktop/projects/wishlist/src/components/Header.tsx",[],{"ruleId":"64","severity":1,"message":"65","line":2,"column":27,"nodeType":"66","messageId":"67","endLine":2,"endColumn":34},{"ruleId":"64","severity":1,"message":"68","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":19},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"64","severity":1,"message":"73","line":2,"column":24,"nodeType":"66","messageId":"67","endLine":2,"endColumn":30},{"ruleId":"64","severity":1,"message":"74","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"64","severity":1,"message":"73","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":14},{"ruleId":"64","severity":1,"message":"75","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":19},"@typescript-eslint/no-unused-vars","'Segment' is defined but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'Header' is defined but never used.","'Item' is defined but never used.","'AccountPage' is defined but never used.","no-global-assign","no-unsafe-negation"]